package controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.pagingVO;
import handler.PagingHandler;
import service.Bservice;
import service.BserviceIm;


@WebServlet("/brd/*")
public class boardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	private static Logger log = LoggerFactory.getLogger(memberController.class);
	
	private Bservice bvc; // 서비스 인터페이스 생성 
	private RequestDispatcher rdp; // 
	private String destPage = ""; // 경로를 저장할 변수
	private String savePath; // 파일 경로를 저장할 변수
	private final String UTF8 = "utf-8"; 
	private int isOk;
	
	
    public boardController() {
        bvc = new BserviceIm();  // 서비스 구현 클래스 생성
    }
    
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		req.setCharacterEncoding(UTF8);
		res.setCharacterEncoding(UTF8);
		res.setContentType("text/html; charset=UTF-8");
		
		String uri = req.getRequestURI();
		log.info(uri);
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(path);
		
		switch (path) {
		case "register":
			try {
				log.info(" 게시글 등록 진입1");
				BoardVO bvo = new BoardVO();
				bvo.setTitle(req.getParameter("title"));
				bvo.setWriter(req.getParameter("writer"));
				bvo.setContent(req.getParameter("content"));
				isOk = bvc.register(bvo);
				if(isOk > 0 ) {
					log.info("게시글 등록완료");
					
				}else {
					log.info("게시글 등록실패");
					
				}
				
				destPage = "list";
				
			} catch (Exception e) {
				log.info("게시글 등록 예외 발생");
				e.printStackTrace();
			}
			
			break;
			
		case "list" : 
			try {
				log.info("게시글 목록 불러오기");
				pagingVO pgVo = new pagingVO();
				int totalCount = bvc.getPageCnt();
				PagingHandler ph = new PagingHandler(pgVo,totalCount);
				List<BoardVO> list = bvc.getpagelist();
				req.setAttribute("list", list);
				destPage = "/board/list.jsp";
			} catch (Exception e) {
				log.info("게시판 예외 발생");
				e.printStackTrace();
			}
			
			break;
			
		case "detail" :
			try {
				log.info("상세페이지 진입1 ");
				int bno = Integer.parseInt(req.getParameter("bno"));
				BoardVO bvo = bvc.getDetail(bno);
				req.setAttribute("bvo", bvo);
				destPage = "/board/detail.jsp";
			} catch (Exception e) {
				log.info("상세페이지 예외 발생");
				e.printStackTrace();
			}
			
			break;
			
		case "modify" :
			try {
				log.info("수정페이지 진입1");
				int bno = Integer.parseInt(req.getParameter("bno"));
				System.out.println("수정"+bno);
				BoardVO bvo = bvc.getDetail(bno);
				req.setAttribute("bvo", bvo);
				destPage = "/board/modify.jsp";
				
			} catch (Exception e) {
				log.info("수정페이지 예외 발생");
				e.printStackTrace();
			}
			
			break;
			
		case "update" : 
			try {
				log.info("게시글 수정 진입1");
				BoardVO bvo = new BoardVO();
				int bno = Integer.parseInt(req.getParameter("bno")); 
				bvo.setBno(bno);
				bvo.setTitle(req.getParameter("title"));
				bvo.setWriter(req.getParameter("writer"));
				bvo.setContent(req.getParameter("content"));
				isOk = bvc.update(bvo);
				if(isOk > 0) {
					log.info("업데이트 성공!");
				}else {
					log.info("업데이트 실패!");
				}
				destPage = "list";
			} catch (Exception e) {
				log.info("업데이트 예외 발생");
				e.printStackTrace();
			}
			
			break;
			
			
		case "remove" : 
			try {
				log.info("게시글 삭제 진입");
				int bno = Integer.parseInt(req.getParameter("bno"));
				isOk = bvc.remove(bno);
				destPage = "list";
			} catch (Exception e) {
				log.info("업데이트 예외 발생");
				e.printStackTrace();
			}
			
			break;
				
		default:
			break;
		}
		
		
		rdp = req.getRequestDispatcher(destPage);
		rdp.forward(req, res);
	}
	
	
	protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// TODO Auto-generated method stub
		service(req,res);
	}

	
	protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(req, res);
	}

}
